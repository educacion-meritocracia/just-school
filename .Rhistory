justicia_nota_tiempo_ch, genero_ES,
libros_hogar, curso_estudiante,
educ_max, school_esfuerzo_ES,
school_talento_ES,
school_merito_ES,
merit_esfuerzo_percep_ES,
merit_talento_percep_ES,
social_merito_percep_ES,
rendimiento
) %>% as.factor(.) %>% as.numeric(.)
datos <- proc_datos %>% select(notas_esfuerzo, notas_merit,
justicia_nota, justicia_nota_ch,
justicia_nota_tiempo_ch, genero_ES,
libros_hogar, curso_estudiante,
educ_max, school_esfuerzo_ES,
school_talento_ES,
school_merito_ES,
merit_esfuerzo_percep_ES,
merit_talento_percep_ES,
social_merito_percep_ES,
rendimiento
) %>% as.factor(.)
class(datos$justicia_nota_ch)
class(datos$genero_ES)
frq(datos$justicia_nota_ch)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, sjPlot, ggplot2, tidyr)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso_estudiante" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, sjPlot, ggplot2, tidyr, stringr)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso_estudiante" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(merit_esfuerzo_percep_ES))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Figura 1.3: En Chile, las personas son recompensadas por sus esfuerzos"
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso_estudiante" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Figura 1.3: En Chile, las personas son recompensadas por sus esfuerzos"
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(genero_ES, curso_estudiante, educ_max, libros_hogar),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
"genero_ES" = "Género",
"libros_hogar" = "Cantidad de libros en el hogar",
"curso_estudiante" = "Curso")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
# fill = "Grado de acuerdo",
title = "Sensación de (in)justicia según características sociodemográficas "
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
names(datos)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("merit_esfuerzo_percep_ES" = "Esfuerzo",
"merit_talento_percep_ES" = "Talento",
"social_merito_percep_ES" = "Merecimiento")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
# fill = "Grado de acuerdo",
title = "Sensación de (in)justicia según creencias en la meritocracia social "
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(school_esfuerzo_ES, school_talento_ES, school_merito_ES),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(school_esfuerzo_ES, school_talento_ES, school_merito_ES),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("school_esfuerzo_ES" = "Esfuerzo",
"school_talento_ES" = "Talento",
"school_merito_ES" = "Merecimiento")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
# fill = "Grado de acuerdo",
title = "Sensación de (in)justicia según creencias en la meritocracia escolar "
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
datos <- datos %>% select(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES) %>% set_labels(., labels=c( "Muy en descuardo"= 1,
"En desacuerdo "= 2,
"De acuerdo" = 3,
"Muy de acuerdo" = 4
))
datos <- datos %>% select(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES) %>% set_labels(., labels=c( "Muy en descuardo"= 1,
"En desacuerdo "= 2,
"De acuerdo" = 3,
"Muy de acuerdo" = 4
))
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("merit_esfuerzo_percep_ES" = "Esfuerzo",
"merit_talento_percep_ES" = "Talento",
"social_merito_percep_ES" = "Merecimiento")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
# fill = "Grado de acuerdo",
title = "Sensación de (in)justicia según creencias en la meritocracia social "
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
load("../input/data/proc/ola1.RData")
datos <- proc_datos %>% select(notas_esfuerzo, notas_merit,
justicia_nota, justicia_nota_ch,
justicia_nota_tiempo_ch, genero_ES,
libros_hogar, curso_estudiante,
educ_max, school_esfuerzo_ES,
school_talento_ES,
school_merito_ES,
merit_esfuerzo_percep_ES,
merit_talento_percep_ES,
social_merito_percep_ES,
rendimiento
)
frq(datos$merit_esfuerzo_percep_ES)
class(datos$merit_esfuerzo_percep_ES)
datos$merit_esfuerzo_percep_ES <-  set_labels(datos$merit_esfuerzo_percep_ES, labels=c( "Muy en descuardo"= 1,
"En desacuerdo "= 2,
"De acuerdo" = 3,
"Muy de acuerdo" = 4
))
# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria") %>%
group_by(variable, categoria) %>%
summarise(Freq_Original = n(), .groups = 'drop')
# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
pivot_longer(cols = c(merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES),
names_to = "variable",
values_to = "categoria")
frecuencias <- proc_datos_largo %>%
group_by(variable, categoria, justicia_nota_ch) %>%
summarise(Freq = n(), .groups = 'drop') %>%
left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
mutate(Porcentaje = Freq / Freq_Original) %>%
ungroup() %>%
na.omit()
# nombre facet_wrap
variable_names <- list("merit_esfuerzo_percep_ES" = "Esfuerzo",
"merit_talento_percep_ES" = "Talento",
"social_merito_percep_ES" = "Merecimiento")
variable_labeller <- function(variable, value){return(variable_names[value])}
# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)
# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(justicia_nota_ch))) +
geom_bar(stat = "identity", position = "fill", color = "white") +
facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)),
position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
# fill = "Grado de acuerdo",
title = "Sensación de (in)justicia según creencias en la meritocracia social "
) +
theme_blank() +
theme(
axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
axis.ticks.y = element_blank(), # Ocultar marcas del eje y
axis.title.x = element_blank(), # Ocultar título del eje x
axis.title.y = element_blank(), # Ocultar título del eje y
strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
legend.position = "bottom",# Colocar la leyenda en la parte inferior
plot.title = element_text(size = 12, face = "italic", color = "black")
) +
scale_fill_brewer(palette = "Blues",
labels = c("1" = "injusticia sub-recompensa",
"2" = "justicia perfecta",
"3" = "injusticia sobre-recompensa"),
name = NULL)
modelo1 <- lm(justicia_nota ~ genero_ES , data = datos)
modelo2 <- lm(justicia_nota ~ genero_ES + curso_estudiante, data = datos)
modelo3 <- lm(justicia_nota ~  genero_ES + curso_estudiante + educ_max , data = datos)
modelo4 <- lm(justicia_nota ~ genero_ES + curso_estudiante + educ_max + libros_hogar, data = datos)
modelo5 <- lm(justicia_nota ~ genero_ES + curso_estudiante + educ_max + libros_hogar + rendimiento, data = datos)
modelo6 <- lm(justicia_nota ~ genero_ES + curso_estudiante + educ_max + libros_hogar + rendimiento + social_merito_percep_ES, data = datos)
sjPlot::tab_model(list(modelo1, modelo2,modelo3, modelo4,modelo5, modelo6), show.ci=FALSE, p.style = "stars", dv.labels = c("Modelo 1", "Modelo 2", "Modelo 3"),string.pred = "Predictores", string.est = "β")
sjPlot::tab_model(list(modelo1, modelo2,modelo3, modelo4,modelo5, modelo6), show.ci=FALSE, p.style = "stars", dv.labels = c("Modelo 1", "Modelo 2", "Modelo 3", "Modelo 4", "Modelo 5", "Modelo 6"),string.pred = "Predictores", string.est = "β")
names(datos)
modelo6 <- lm(justicia_nota ~ genero_ES + curso_estudiante + educ_max + libros_hogar + rendimiento + notas_esfuerzo, data = datos)
modelo7 <- lm(justicia_nota ~ genero_ES + curso_estudiante + educ_max + libros_hogar + rendimiento + notas_esfuerzo + social_merito_percep_ES, data = datos)
sjPlot::tab_model(list(modelo1, modelo2,modelo3, modelo4,modelo5, modelo6, modelo7), show.ci=FALSE, p.style = "stars", dv.labels = c("Modelo 1", "Modelo 2", "Modelo 3", "Modelo 4", "Modelo 5", "Modelo 6", "Modelo 7" ),string.pred = "Predictores", string.est = "β")
plot_model(modelo7, show.values = TRUE)+ theme_sjplot()
class(datos$justicia_nota_ch)
class(datos$school_esfuerzo_ES)
datos <- as.numeric(datos)
class(datos$libros_hogar)
class(datos$notas_esfuerzo)
datos <- datos %>% select(notas_esfuerzo,
notas_merit,
curso_estudiante,
school_esfuerzo_ES,
school_talento_ES,
school_merito_ES,
merit_esfuerzo_percep_ES,
merit_talento_percep_ES,
social_merito_percep_ES) %>% as.factor(.)
class(datos$notas_merit)
datos <- datos %>% select(notas_esfuerzo,
notas_merit,
curso_estudiante,
school_esfuerzo_ES,
school_talento_ES,
school_merito_ES,
merit_esfuerzo_percep_ES,
merit_talento_percep_ES,
social_merito_percep_ES) %>%
datos$notas_esfuerzo <- as.factor(datos$notas_esfuerzo)
class(datos$notas_esfuerzo)
