c2_B = T_pex_2_2_o2,
c3_A = T_pex_3_1_o2,
c3_B = T_pex_3_2_o2,
c4_A = T_pex_4_1_o2,
c4_B = T_pex_4_2_o2,
c4_C = T_pex_4_3_o2,
c4_D = T_pex_4_4_o2,
genero = p14_o2,
curso = d3_def_o1,
school_pref = p3_o2,
nota_ob = p4_o2,
nota_merit = p5_o2,
nota_pref = p6_o2,
nota_merit_esf = p7_o2,
ne_madre = p17_o2,
ne_padre = p18_o2,
libros_hogar = p19_o2,
social_esfuerzo = p1_1_o2 ,
social_talento = p1_2_o2,
igual_oportunidades = p1_9_o2,
social_merito = p1_10_o2,
school_esfuerzo = p2_1_o2,
school_talento = p2_2_o2,
school_merito = p2_3_o2
)
datos_exp <- datos_exp %>%
mutate(curso = case_when(
grepl("^(2|1)", curso, ignore.case = TRUE) ~ 'Media',
grepl("^(7|6)", curso, ignore.case = TRUE) ~ 'Básica',
TRUE ~ curso  # mantener el valor original si no coincide con ninguna condición
))
#categoria otro: 4.52%. No tiene casos perdidos
datos_exp$genero <- recode(datos_exp$genero, "3=NA")
### b. recodificacion ----
datos_exp$genero <- factor(datos_exp$genero,
levels=c(1,2),
labels=c("Hombre","Mujer"))
## ne más alto padres
datos_exp$ne_madre <- recode(datos_exp$ne_madre, "c(88,99)=NA")
datos_exp$ne_padre <- recode(datos_exp$ne_padre, "c(88,99)=NA")
datos_exp <- datos_exp %>%
mutate(educ_max = case_when(
!is.na(ne_madre) & is.na(ne_padre) ~ ne_madre,
is.na(ne_madre) & !is.na(ne_padre) ~ ne_padre,
!is.na(ne_madre) & !is.na(ne_padre) ~ pmax(ne_madre, ne_padre, na.rm = TRUE),
TRUE ~ NA_real_
))
#install.packages("pacman")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
datos <- read_sav("input/data/original/251024 Edumer Ola2 ID.sav")
datos_exp <- datos %>% select(T_pex_1_1_o2, T_pex_1_2_o2,  T_pex_2_1_o2, T_pex_2_2_o2,
T_pex_3_1_o2, T_pex_3_2_o2, T_pex_4_1_o2, T_pex_4_2_o2,
T_pex_4_3_o2, T_pex_4_4_o2, p14_o2, d3_def_o1, p3_o2,
p4_o2, p5_o2,p6_o2, p7_o2, p17_o2, p18_o2, p19_o2, p1_1_o2,
p1_2_o2, p1_9_o2, p1_10_o2, p2_1_o2, p2_2_o2, p2_3_o2) %>% na.omit()
#renombrar
datos_exp <- datos_exp %>% rename(c1_A = T_pex_1_1_o2,
c1_B = T_pex_1_2_o2,
c2_A = T_pex_2_1_o2,
c2_B = T_pex_2_2_o2,
c3_A = T_pex_3_1_o2,
c3_B = T_pex_3_2_o2,
c4_A = T_pex_4_1_o2,
c4_B = T_pex_4_2_o2,
c4_C = T_pex_4_3_o2,
c4_D = T_pex_4_4_o2,
genero = p14_o2,
curso = d3_def_o1,
school_pref = p3_o2,
nota_ob = p4_o2,
nota_merit = p5_o2,
nota_pref = p6_o2,
nota_merit_esf = p7_o2,
ne_madre = p17_o2,
ne_padre = p18_o2,
libros_hogar = p19_o2,
social_esfuerzo = p1_1_o2 ,
social_talento = p1_2_o2,
igual_oportunidades = p1_9_o2,
social_merito = p1_10_o2,
school_esfuerzo = p2_1_o2,
school_talento = p2_2_o2,
school_merito = p2_3_o2
)
datos_exp <- datos_exp %>%
mutate(curso = case_when(
grepl("^(2|1)", curso, ignore.case = TRUE) ~ 'Media',
grepl("^(7|6)", curso, ignore.case = TRUE) ~ 'Básica',
TRUE ~ curso  # mantener el valor original si no coincide con ninguna condición
))
#categoria otro: 4.52%. No tiene casos perdidos
datos_exp$genero <- recode(datos_exp$genero, "3=NA")
### b. recodificacion ----
datos_exp$genero <- factor(datos_exp$genero,
levels=c(1,2),
labels=c("Hombre","Mujer"))
## ne más alto padres
datos_exp$ne_madre <- recode(datos_exp$ne_madre, "c(88,99)=NA")
datos_exp$ne_padre <- recode(datos_exp$ne_padre, "c(88,99)=NA")
datos_exp <- datos_exp %>%
mutate(educ_max = case_when(
!is.na(ne_madre) & is.na(ne_padre) ~ ne_madre,
is.na(ne_madre) & !is.na(ne_padre) ~ ne_padre,
!is.na(ne_madre) & !is.na(ne_padre) ~ pmax(ne_madre, ne_padre, na.rm = TRUE),
TRUE ~ NA_real_
))
dplyr::last_dplyr_warnings()
datos_exp <- datos_exp %>%
dplyr::mutate(educ_max = case_when(
!is.na(ne_madre) & is.na(ne_padre) ~ ne_madre,
is.na(ne_madre) & !is.na(ne_padre) ~ ne_padre,
!is.na(ne_madre) & !is.na(ne_padre) ~ pmax(ne_madre, ne_padre, na.rm = TRUE),
TRUE ~ NA_real_
))
frq(datos_exp$educ_max)
datos_exp$educ_max <- recode(datos_exp$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
datos_exp$educ_max <- factor(datos_exp$educ_max,
levels=c(1,2),
labels=c("Enseñanza media o menos","Estudios superiores"))
### b. recodificación ----
datos_exp$libros_hogar <- recode(datos_exp$libros_hogar, "c(88,99)=NA; 1=1;2=1; 3=2; 4=2;5=2;6=2")
datos_exp$libros_hogar <- factor(datos_exp$libros_hogar,
levels=c(1,2),
labels=c("Menos de 25 libros","Más de 25 libros"))
### b. recodificacion ----
datos_exp$nota_merit <- recode(datos_exp$nota_merit, "c(88,99)=NA")
### b. recodificacion ----
datos_exp$nota_merit_esf <- recode(datos_exp$nota_merit_esf, "c(88,99)=NA")
datos_exp <- datos_exp %>% rename(rendimiento = nota_ob)
# nota preferida
datos_exp <- datos_exp %>%
mutate(nota_pref = case_when(
is.na(nota_pref) & nota_merit == 2 ~ rendimiento ,  # Imputar el valor de 'notas_merit' (2) cuando 'nota_pref' es NA
TRUE ~ nota_pref  # Mantener los valores existentes de 'nota_pref' cuando no son NA
))
# justicia
datos_exp <- datos_exp %>% mutate(justicia_nota = log(rendimiento/nota_pref))
# prueba con pregunta que añade tiempo
datos_exp <- datos_exp %>%
mutate(
justicia_nota_tiempo_ch = dplyr::case_when(
justicia_nota < 0  |nota_merit_esf == 1 ~ 1,
justicia_nota == 0 | nota_merit_esf == 2 ~ 2,
justicia_nota > 0  | nota_merit_esf == 3 ~ 3))
datos_exp$justicia_nota_tiempo_ch <- factor(datos_exp$justicia_nota_tiempo_ch,
levels=c(1,2,3),
labels=c("injusticia sub-recompensa",
"justicia perfecta",
"injusticia sobre-recompensa"))
datos_exp <- datos_exp %>%
mutate(
justicia_nota_ch = dplyr::case_when(
justicia_nota < 0  ~ 1,
justicia_nota == 0 ~ 2,
justicia_nota > 0  ~ 3
)
)
datos_exp$justicia_nota_ch <- factor(datos_exp$justicia_nota_ch,
levels=c(1,2,3),
labels=c("injusticia sub-recompensa",
"justicia perfecta",
"injusticia sobre-recompensa"))
# 5. base procesada -----------------------------------------------------------
datos_exp <-as.data.frame(datos_exp)
stargazer(datos_exp, type="text")
save(datos_exp,file = "input/data/proc/ola2.RData")
# Calcular las frecuencias en porcentaje para cada variable y grupo
datos_long <- datos %>%
pivot_longer(cols = c("social_esfuerzo", "social_talento", "social_merito"),
names_to = "Variable",
values_to = "Valor") %>%
group_by(grupo, Variable) %>%
summarise(Frecuencia = sum(Valor) / n() * 100, .groups = 'drop') # Convertir a porcentaje
frq(datos_exp$c1_A)
frq(datos_exp$c1_B)
datos <- datos_exp %>%
mutate(grupo = case_when(
c1_A == 3 ~ "Estudiante A 3 décimas",
c1_B == 2 ~ "Estudiante B 2 décimas",
TRUE ~ NA_character_  # Para manejar los casos que no cumplen ninguna condición
))
# Calcular las frecuencias en porcentaje para cada variable y grupo
datos_long <- datos %>%
tidyr::pivot_longer(cols = c("social_esfuerzo", "social_talento", "social_merito"),
names_to = "Variable",
values_to = "Valor") %>%
group_by(grupo, Variable) %>%
summarise(Frecuencia = sum(Valor) / n() * 100, .groups = 'drop') # Convertir a porcentaje
datos <- datos_exp %>%
mutate(grupo = case_when(
c2_A == 3 ~ "Estudiante A 3 décimas",
c2_B == 2 ~ "Estudiante B 2 décimas",
TRUE ~ NA_character_  # Para manejar los casos que no cumplen ninguna condición
))
# Calcular las frecuencias en porcentaje para cada variable y grupo
datos_long <- datos %>%
tidyr::pivot_longer(cols = c("social_esfuerzo", "social_talento", "social_merito"),
names_to = "Variable",
values_to = "Valor") %>%
group_by(grupo, Variable) %>%
summarise(Frecuencia = sum(Valor) / n() * 100, .groups = 'drop') # Convertir a porcentaje
# Crear gráfico con barras más delgadas
ggplot(datos_long, aes(x = Variable, y = Frecuencia, fill = grupo)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) + # Ajustar grosor de barras
geom_text(aes(label = paste0(round(Frecuencia, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3.5) + # Etiquetas sobre las barras
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_fill_manual(values = c("#4F81BD", "#A9C0DE")) +
labs(
x = "",
y = "Frecuencia (%)",
fill = "Estudiante",
title = "Percepciones de mérito social según caso 2"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
# Crear gráfico con barras más delgadas
ggplot2::ggplot(datos_long, aes(x = Variable, y = Frecuencia, fill = grupo)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) + # Ajustar grosor de barras
geom_text(aes(label = paste0(round(Frecuencia, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3.5) + # Etiquetas sobre las barras
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_fill_manual(values = c("#4F81BD", "#A9C0DE")) +
labs(
x = "",
y = "Frecuencia (%)",
fill = "Estudiante",
title = "Percepciones de mérito social según caso 2"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
library(ggplot2)
# Crear gráfico con barras más delgadas
ggplot(datos_long, aes(x = Variable, y = Frecuencia, fill = grupo)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) + # Ajustar grosor de barras
geom_text(aes(label = paste0(round(Frecuencia, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.3, size = 3.5) + # Etiquetas sobre las barras
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_fill_manual(values = c("#4F81BD", "#A9C0DE")) +
labs(
x = "",
y = "Frecuencia (%)",
fill = "Estudiante",
title = "Percepciones de mérito social según caso 2"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
load("../input/data/proc/ola2.RData")
pacman::p_load(tidyverse, dplyr, sjmisc, car, sjlabelled, stargazer, haven, sjPlot, ggplot2, tidyr, stringr, corrplot, summarytools)
datos <- datos_exp %>%
mutate(grupo = case_when(
c2_A == 3 ~ "Estudiante A 3 décimas",
c2_B == 2 ~ "Estudiante B 2 décimas",
TRUE ~ NA_character_  # Para manejar los casos que no cumplen ninguna condición
))
frq(datos$grupo)
datos <- datos_exp %>%
mutate(grupo = case_when(
c2_A == 3 ~ "Estudiante A 3 décimas",
c2_B == 2 ~ "Estudiante B 2 décimas"
))
frq(datos$grupo)
datos <- datos_exp %>%
mutate(grupo = case_when(
c1_A == 3 & c1_B != 2 ~ "Estudiante A 3 décimas",
c1_B == 2 & c1_A != 3 ~ "Estudiante B 2 décimas"
))
frq(datos$grupo)
datos <- datos_exp %>%
mutate(
grupo = if_else(
c1_A == 3, "Estudiante A 3 décimas",
if_else(c1_B == 2, "Estudiante B 2 décimas", NA_character_)
)
)
frq(datos$grupo)
datos <- datos_exp %>%
mutate(grupo = NA_character_) %>% # Inicializamos `grupo` como NA
mutate(grupo = replace(grupo, c1_A == 3, "Estudiante A 3 décimas")) %>%
mutate(grupo = replace(grupo, c1_B == 2 & is.na(grupo), "Estudiante B 2 décimas"))
frq(datos$grupo)
frq(datos_exp$c2_B)
datos <- datos_exp %>% filter(datos_exp, c2_A == 3 & c2_B == 2)
datos <- datos_exp %>% filter(datos_exp, c2_A == 3)
datos <- datos_exp %>% mutate(c2_A = filter(datos_exp, c2_A == 3))
datos <- datos_exp %>% mutate(c2_A = filter(c2_A == 3))
datos <- datos_exp %>% mutate(c2_A = filter(c2_A == 3))
datos <- datos_exp %>% filter(c2_A == 3))
datos <- datos_exp %>% filter(c2_A == 3)
frq(datos$c2_A)
datos <- datos_exp %>% filter(c2_B == 2)
a <- sjt.xtab(datos_exp$social_esfuerzo,
datos$c2_A,
show.summary = F,
emph.total = T,
show.col.prc = T, # porcentaje columna
encoding= "UTF-8")
a
a <- datos %>%
select(c2_A) %>%
sjPlot::plot_likert(geom.colors = colors,
title = c("a. Percepciones"),
geom.size = 0.8,
axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
catcount = 4,
values  =  "sum.outside",
reverse.colors = F,
reverse.scale = T,
show.n = FALSE,
show.prc.sign = T
) +
ggplot2::theme(legend.position = "none")
frq(datos$school_esfuerzo)
a <- sjt.xtab(datos$social_esfuerzo,
datos$c2_A,
show.summary = F,
emph.total = T,
show.col.prc = T, # porcentaje columna
encoding= "UTF-8")
datos <- datos %>%
mutate(
caso_2 = case_when(
c2_A == "3" ~ "Estudiante A 3 décimas",
c2_B == "2" ~ "Estudiante B 2 décimas",
TRUE ~ NA_character_  # Para manejar los casos que no cumplen ninguna condición
)
)
frq(datos$caso_2)
frq(datos$c2_B)
a <- sjt.xtab(datos_exp$social_esfuerzo,
datos_exp$c2_A,
show.summary = F,
emph.total = T,
show.col.prc = T, # porcentaje columna
encoding= "UTF-8")
a
# MERITOCRACIA ----------------------------------------------------------------
datos_exp$social_esfuerzo <- recode(datos_exp$social_esfuerzo, "c(88,99)=NA")
frq(datos_exp$igual_oportunidades)
# MERITOCRACIA ----------------------------------------------------------------
datos_exp$social_esfuerzo <- recode(datos_exp$social_esfuerzo, "c(88,99)=NA")
datos_exp$social_talento <- recode(datos_exp$social_talento, "c(88,99)=NA")
#install.packages("pacman")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
datos <- read_sav("input/data/original/251024 Edumer Ola2 ID.sav")
datos_exp <- datos %>% select(T_pex_1_1_o2, T_pex_1_2_o2,  T_pex_2_1_o2, T_pex_2_2_o2,
T_pex_3_1_o2, T_pex_3_2_o2, T_pex_4_1_o2, T_pex_4_2_o2,
T_pex_4_3_o2, T_pex_4_4_o2, p14_o2, d3_def_o1, p3_o2,
p4_o2, p5_o2,p6_o2, p7_o2, p17_o2, p18_o2, p19_o2, p1_1_o2,
p1_2_o2, p1_9_o2, p1_10_o2, p2_1_o2, p2_2_o2, p2_3_o2) %>% na.omit()
#renombrar
datos_exp <- datos_exp %>% rename(c1_A = T_pex_1_1_o2,
c1_B = T_pex_1_2_o2,
c2_A = T_pex_2_1_o2,
c2_B = T_pex_2_2_o2,
c3_A = T_pex_3_1_o2,
c3_B = T_pex_3_2_o2,
c4_A = T_pex_4_1_o2,
c4_B = T_pex_4_2_o2,
c4_C = T_pex_4_3_o2,
c4_D = T_pex_4_4_o2,
genero = p14_o2,
curso = d3_def_o1,
school_pref = p3_o2,
nota_ob = p4_o2,
nota_merit = p5_o2,
nota_pref = p6_o2,
nota_merit_esf = p7_o2,
ne_madre = p17_o2,
ne_padre = p18_o2,
libros_hogar = p19_o2,
social_esfuerzo = p1_1_o2 ,
social_talento = p1_2_o2,
igual_oportunidades = p1_9_o2,
social_merito = p1_10_o2,
school_esfuerzo = p2_1_o2,
school_talento = p2_2_o2,
school_merito = p2_3_o2
)
datos_exp <- datos_exp %>%
mutate(curso = case_when(
grepl("^(2|1)", curso, ignore.case = TRUE) ~ 'Media',
grepl("^(7|6)", curso, ignore.case = TRUE) ~ 'Básica',
TRUE ~ curso  # mantener el valor original si no coincide con ninguna condición
))
#categoria otro: 4.52%. No tiene casos perdidos
datos_exp$genero <- recode(datos_exp$genero, "3=NA")
### b. recodificacion ----
datos_exp$genero <- factor(datos_exp$genero,
levels=c(1,2),
labels=c("Hombre","Mujer"))
## ne más alto padres
datos_exp$ne_madre <- recode(datos_exp$ne_madre, "c(88,99)=NA")
datos_exp$ne_padre <- recode(datos_exp$ne_padre, "c(88,99)=NA")
datos_exp <- datos_exp %>%
dplyr::mutate(educ_max = case_when(
!is.na(ne_madre) & is.na(ne_padre) ~ ne_madre,
is.na(ne_madre) & !is.na(ne_padre) ~ ne_padre,
!is.na(ne_madre) & !is.na(ne_padre) ~ pmax(ne_madre, ne_padre, na.rm = TRUE),
TRUE ~ NA_real_
))
datos_exp$educ_max <- recode(datos_exp$educ_max, "1=1; 2=1; 3=1; 4=2; 5=2; 6=2")
datos_exp$educ_max <- factor(datos_exp$educ_max,
levels=c(1,2),
labels=c("Enseñanza media o menos","Estudios superiores"))
frq(datos_exp$educ_max)
## libros_hogar ----
### a, descriptivo basico
frq(datos_exp$libros_hogar)
### b. recodificación ----
datos_exp$libros_hogar <- recode(datos_exp$libros_hogar, "c(88,99)=NA; 1=1;2=1; 3=2; 4=2;5=2;6=2")
datos_exp$libros_hogar <- factor(datos_exp$libros_hogar,
levels=c(1,2),
labels=c("Menos de 25 libros","Más de 25 libros"))
### b. recodificacion ----
datos_exp$nota_merit <- recode(datos_exp$nota_merit, "c(88,99)=NA")
### b. recodificacion ----
datos_exp$nota_merit_esf <- recode(datos_exp$nota_merit_esf, "c(88,99)=NA")
datos_exp <- datos_exp %>% rename(rendimiento = nota_ob)
# nota preferida
datos_exp <- datos_exp %>%
mutate(nota_pref = case_when(
is.na(nota_pref) & nota_merit == 2 ~ rendimiento ,  # Imputar el valor de 'notas_merit' (2) cuando 'nota_pref' es NA
TRUE ~ nota_pref  # Mantener los valores existentes de 'nota_pref' cuando no son NA
))
# justicia
datos_exp <- datos_exp %>% mutate(justicia_nota = log(rendimiento/nota_pref))
# prueba con pregunta que añade tiempo
datos_exp <- datos_exp %>%
mutate(
justicia_nota_tiempo_ch = dplyr::case_when(
justicia_nota < 0  |nota_merit_esf == 1 ~ 1,
justicia_nota == 0 | nota_merit_esf == 2 ~ 2,
justicia_nota > 0  | nota_merit_esf == 3 ~ 3))
datos_exp$justicia_nota_tiempo_ch <- factor(datos_exp$justicia_nota_tiempo_ch,
levels=c(1,2,3),
labels=c("injusticia sub-recompensa",
"justicia perfecta",
"injusticia sobre-recompensa"))
datos_exp <- datos_exp %>%
mutate(
justicia_nota_ch = dplyr::case_when(
justicia_nota < 0  ~ 1,
justicia_nota == 0 ~ 2,
justicia_nota > 0  ~ 3
)
)
datos_exp$justicia_nota_ch <- factor(datos_exp$justicia_nota_ch,
levels=c(1,2,3),
labels=c("injusticia sub-recompensa",
"justicia perfecta",
"injusticia sobre-recompensa"))
# MERITOCRACIA ----------------------------------------------------------------
datos_exp$social_esfuerzo <- recode(datos_exp$social_esfuerzo, "c(88,99)=NA")
datos_exp$social_talento <- recode(datos_exp$social_talento, "c(88,99)=NA")
datos_exp$social_merito <- recode(datos_exp$social_merito, "c(88,99)=NA")
datos_exp$school_esfuerzo <- recode(datos_exp$school_esfuerzo, "c(88,99)=NA")
datos_exp$school_talento <- recode(datos_exp$school_talento, "c(88,99)=NA")
datos_exp$school_merito <- recode(datos_exp$school_merito, "c(88,99)=NA")
datos_exp$igual_oportunidades <- recode(datos_exp$igual_oportunidades, "c(88,99)=NA")
# 5. base procesada -----------------------------------------------------------
datos_exp <-as.data.frame(datos_exp)
stargazer(datos_exp, type="text")
save(datos_exp,file = "input/data/proc/ola2.RData")
plot_caso2 <- datos_exp %>% select(c2_A, c2_B) %>%
plot_stackfrq() + theme(legend.position="right")  +
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Décimas",
title = "Caso 2 (esfuerzo)"
) # esfuerzo, dieron en su mayoria 3 decima eA
plot_caso2
mujer_caso2 <- datos_exp %>% dplyr::filter(c2_A=="3") %>%
dplyr::select(social_esfuerzo, social_talento, social_merito) %>%
plot_stackfrq() + theme(legend.position="right")+
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Mujer"
)
mujer_caso2
mujer_caso2 <- datos_exp %>% dplyr::filter(c2_A=="3") %>%
dplyr::select(social_esfuerzo, social_talento, social_merito) %>%
plot_stackfrq() + theme(legend.position="right")+
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Estudiante A 3 décimas y Estudiante B 2 décimas"
)
mujer_caso2
datos_exp <- datos_exp %>% na.omit()
mujer_caso2 <- datos_exp %>% dplyr::filter(c2_A=="3") %>%
dplyr::select(social_esfuerzo, social_talento, social_merito) %>%
plot_stackfrq() + theme(legend.position="right")+
labs(
x = NULL, # Elimina el título del eje x
y = NULL, # Elimina el título del eje y
fill = "Grado de acuerdo",
title = "Estudiante A 3 décimas y Estudiante B 2 décimas"
)
mujer_caso2
frq(datos_exp$social_merito)
load("../input/data/proc/ola2.RData")
frq(datos_exp$social_merito)
datos_exp$social_merito <- recode(datos_exp$social_merito, "c(88,99)=NA")
frq(datos_exp$social_merito)
